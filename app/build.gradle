apply plugin: 'com.android.application'

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.fitgenerator"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // should correspond to key/value pairs inside the file
        buildConfigField("String", "APP_ID", apikeyProperties['APP_ID'])
        buildConfigField("String", "MASTER_KEY", apikeyProperties['MASTER_KEY'])
        buildConfigField("String", "SERVER_URL", apikeyProperties['SERVER_URL'])
        buildConfigField("String", "GOOGLE_API_KEY", apikeyProperties['GOOGLE_API_KEY'])
        buildConfigField("String", "DEV_SERVER_URL", apikeyProperties['DEV_SERVER_URL'])
        buildConfigField("String", "WEATHER_API_KEY", apikeyProperties['WEATHER_API_KEY'])
        buildConfigField("String", "FACEBOOK_APP_ID", apikeyProperties['FACEBOOK_APP_ID'])
    }
    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    appCompatVersion = '1.0.0'
    designSupportVersion = '1.1.0'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    // Glide v4 uses this new annotation processor -- see https://bumptech.github.io/glide/doc/generatedapi.html
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //For toolbar
    implementation 'androidx.appcompat:appcompat:1.0.0'

    //Material design livs
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:${designSupportVersion}"

    //Parse SDK
    implementation 'com.github.parse-community.Parse-SDK-Android:parse:1.24.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1' // for logging API calls to LogCat

    //Parcel
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'

    //Swipe to delete library
    implementation 'it.xabaras.android:recyclerview-swipedecorator:1.2.3'

    //Places SDK
    implementation 'com.google.android.libraries.places:places:2.3.0'

    //Async
    implementation 'com.codepath.libraries:asynchttpclient:0.0.9'

    //Facebook SDK
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'

    //Parse Facebook SDK
    implementation "com.github.parse-community.Parse-SDK-Android:facebook:1.25.0"

    //Infinite Cycle
    implementation 'com.github.devlight:infinitecycleviewpager:1.0.2'

    //Allows the user to select between Camera or Gallery
    implementation 'com.github.jrvansuita:PickImage:+'

    //Weather Icons
    implementation 'com.github.pwittchen:weathericonview:1.1.0'

    //Glide Transformations
    implementation 'jp.wasabeef:glide-transformations:4.1.0'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android:gpuimage:2.0.4'




}