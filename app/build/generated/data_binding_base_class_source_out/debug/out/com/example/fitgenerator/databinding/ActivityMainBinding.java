// Generated by view binder compiler. Do not edit!
package com.example.fitgenerator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.example.fitgenerator.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton btnFAB;

  @NonNull
  public final FloatingActionButton fabBottom;

  @NonNull
  public final FloatingActionButton fabShoes;

  @NonNull
  public final FloatingActionButton fabTop;

  @NonNull
  public final ViewPager viewPager;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton btnFAB, @NonNull FloatingActionButton fabBottom,
      @NonNull FloatingActionButton fabShoes, @NonNull FloatingActionButton fabTop,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.btnFAB = btnFAB;
    this.fabBottom = fabBottom;
    this.fabShoes = fabShoes;
    this.fabTop = fabTop;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFAB;
      FloatingActionButton btnFAB = rootView.findViewById(id);
      if (btnFAB == null) {
        break missingId;
      }

      id = R.id.fabBottom;
      FloatingActionButton fabBottom = rootView.findViewById(id);
      if (fabBottom == null) {
        break missingId;
      }

      id = R.id.fabShoes;
      FloatingActionButton fabShoes = rootView.findViewById(id);
      if (fabShoes == null) {
        break missingId;
      }

      id = R.id.fabTop;
      FloatingActionButton fabTop = rootView.findViewById(id);
      if (fabTop == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnFAB, fabBottom, fabShoes,
          fabTop, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
