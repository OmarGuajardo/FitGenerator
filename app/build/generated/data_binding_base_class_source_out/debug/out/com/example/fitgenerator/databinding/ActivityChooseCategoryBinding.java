// Generated by view binder compiler. Do not edit!
package com.example.fitgenerator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.fitgenerator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChooseCategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CategoryItemBinding categoryFavorite;

  @NonNull
  public final CategoryItemBinding categoryOccasion;

  @NonNull
  public final CategoryItemBinding categoryRandom;

  @NonNull
  public final CategoryItemBinding categorySeason;

  private ActivityChooseCategoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull CategoryItemBinding categoryFavorite, @NonNull CategoryItemBinding categoryOccasion,
      @NonNull CategoryItemBinding categoryRandom, @NonNull CategoryItemBinding categorySeason) {
    this.rootView = rootView;
    this.categoryFavorite = categoryFavorite;
    this.categoryOccasion = categoryOccasion;
    this.categoryRandom = categoryRandom;
    this.categorySeason = categorySeason;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChooseCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChooseCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_choose_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChooseCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryFavorite;
      View categoryFavorite = rootView.findViewById(id);
      if (categoryFavorite == null) {
        break missingId;
      }
      CategoryItemBinding binding_categoryFavorite = CategoryItemBinding.bind(categoryFavorite);

      id = R.id.categoryOccasion;
      View categoryOccasion = rootView.findViewById(id);
      if (categoryOccasion == null) {
        break missingId;
      }
      CategoryItemBinding binding_categoryOccasion = CategoryItemBinding.bind(categoryOccasion);

      id = R.id.categoryRandom;
      View categoryRandom = rootView.findViewById(id);
      if (categoryRandom == null) {
        break missingId;
      }
      CategoryItemBinding binding_categoryRandom = CategoryItemBinding.bind(categoryRandom);

      id = R.id.categorySeason;
      View categorySeason = rootView.findViewById(id);
      if (categorySeason == null) {
        break missingId;
      }
      CategoryItemBinding binding_categorySeason = CategoryItemBinding.bind(categorySeason);

      return new ActivityChooseCategoryBinding((ConstraintLayout) rootView,
          binding_categoryFavorite, binding_categoryOccasion, binding_categoryRandom,
          binding_categorySeason);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
